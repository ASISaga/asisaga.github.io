// filepath: c:\Development\RealmOfAgents\asisaga.github.io\assets\css\_base\_mixins.scss
// Reusable style patterns and functions - Prioritizing Bootstrap where available

// Create responsive font sizes
// Note: Bootstrap has a .fs-* system, but this mixin provides more granular control
@mixin responsive-font-size($min-size, $max-size, $min-width: 320px, $max-width: 1200px) {
  font-size: $min-size;
  
  @media screen and (min-width: $min-width) {
    font-size: calc(#{$min-size} + #{strip-unit($max-size - $min-size)} * ((100vw - #{$min-width}) / #{strip-unit($max-width - $min-width)}));
  }
  
  @media screen and (min-width: $max-width) {
    font-size: $max-size;
  }
}

// Helper function to strip units from values
@function strip-unit($number) {
  @if type-of($number) == 'number' and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }
  @return $number;
}

// Box shadow mixins
// Note: Bootstrap offers .shadow-sm, .shadow, and .shadow-lg utilities
// Only use these mixins when custom shadows are absolutely required
@mixin box-shadow-sm {
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
}

@mixin box-shadow-md {
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);
}

@mixin box-shadow-lg {
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);
}

// Transitions mixin
// Note: Bootstrap offers .transition utility for standard transitions
// Only use this mixin for custom timing or properties
@mixin transition($property: all, $duration: 0.3s, $timing: ease) {
  transition: $property $duration $timing;
}

// Flexbox layout mixins
// Note: These have Bootstrap equivalents:
// - flex-center: .d-flex .align-items-center .justify-content-center
// - flex-between: .d-flex .align-items-center .justify-content-between
// - flex-column: .d-flex .flex-column
// Only use these mixins within other mixins or when @extend cannot be used (e.g., in media queries)
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

// Media query mixins
// These are useful wrappers around Bootstrap's breakpoints for SCSS context
@mixin media-breakpoint-up($breakpoint) {
  @if map-has-key($grid-breakpoints, $breakpoint) {
    $min-width: map-get($grid-breakpoints, $breakpoint);
    @media (min-width: $min-width) {
      @content;
    }
  } @else {
    @warn "No breakpoint found for '#{$breakpoint}'. Available breakpoints: #{map-keys($grid-breakpoints)}.";
  }
}

@mixin media-breakpoint-down($breakpoint) {
  @if map-has-key($grid-breakpoints, $breakpoint) {
    $max-width: map-get($grid-breakpoints, $breakpoint);
    @media (max-width: ($max-width - 0.02px)) {
      @content;
    }
  } @else {
    @warn "No breakpoint found for '#{$breakpoint}'. Available breakpoints: #{map-keys($grid-breakpoints)}.";
  }
}

// Mixins to apply specific Bootstrap utility styles
// Only use these when @extend is not possible (e.g., inside @media queries)
@mixin apply-px-0 {
  padding-left: 0 !important;
  padding-right: 0 !important;
}

@mixin apply-py-1 {
  padding-top: 0.25rem !important;
  padding-bottom: 0.25rem !important;
}

// Text truncate
// Note: Bootstrap provides .text-truncate utility
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Create accessible hiding for screen readers only
// Note: Bootstrap provides .visually-hidden utility
@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

// Button variant mixin (simplified version of Bootstrap's)
// Note: Bootstrap provides .btn, .btn-primary, .btn-outline-* etc. utilities
@mixin button-variant($background, $border, $color) {
  color: $color;
  background-color: $background;
  border-color: $border;
  
  &:hover, &:focus {
    color: $color;
    background-color: darken($background, 10%);
    border-color: darken($border, 10%);
  }
}

/*
  BOOTSTRAP FIRST APPROACH:
  
  For most styling needs, use Bootstrap's native utilities:
  
  - Spacing: .m*, .p* (.mt-3, .px-4, etc.)
  - Typography: .fs-*, .fw-*, .fst-* (.fs-5, .fw-bold, etc.)
  - Colors: .text-*, .bg-* (.text-primary, .bg-light, etc.)
  - Flex: .d-flex, .flex-*, .justify-content-*, .align-items-* 
  - Borders: .border, .border-* (.border-primary, .border-1, etc.)
  - Sizing: .w-*, .h-* (.w-100, .h-auto, etc.)
  - Display: .d-* (.d-block, .d-none, etc.)
  
  Only use these mixins for complex styles that Bootstrap doesn't provide or for 
  responsive styles where @extend can't be used within media queries.
*/